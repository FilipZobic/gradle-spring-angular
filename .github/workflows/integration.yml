name: CI
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project sources
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Compile
        id: compile
        run: ./gradlew classes
      - name: Unit tests
        id: test
        run: ./gradlew test
      - name: Package Jar
        id: packageJar
        run: ./gradlew jar
      - name: Integration Tests
        id: integrationTest
        run: ./gradlew integrationTest
      - name: Build & Scan
        id: gradle
        run: ./gradlew build --scan
      - name: "Add build scan URL as PR comment (Failed)"
        uses: actions/github-script@v5
        if: github.event_name == 'pull_request' && failure()
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '❌ ${{ github.workflow }} failed: ${{ steps.gradle.outputs.build-scan-url }}'
            })
      - name: "Add build scan URL as PR comment (Succeeded)"
        uses: actions/github-script@v5
        if: github.event_name == 'pull_request' && success()
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '✅ ${{ github.workflow }} Succeeded: ${{ steps.gradle.outputs.build-scan-url }}'
            })
      - name: "SonarQube Analysis"
        id: sonar-qube
        run: ./gradlew -DSONAR_LOGIN = ${{ secrets.SONAR_TOKEN }} -DSONAR_PROJECTKEY = ${{ secrets.SONAR_PROJECTKEY }} -DSONAR_ORGANIZATION = ${{ secrets.SONAR_ORGANIZATION }} -DSONAR_HOST_URL= ${{ secrets.SONAR_HOST_URL }} sonarqube

#        env:
#          SONAR_HOST_URL:
#          SONAR_ORGANIZATION: ${{ secrets.SONAR_ORGANIZATION }}
#          SONAR_PROJECTKEY: ${{ secrets.SONAR_PROJECTKEY }}
#          SONAR_LOGIN: ${{ secrets.SONAR_TOKEN }}
